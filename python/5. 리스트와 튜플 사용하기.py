a1 = 10
a2 = 20
# . . . (생략)
a29 = 60
a30 = 40

#리스트 만들기
# 변수에 값을 저장할 때 [](대괄호)로 묶어주면 리스트가 되며 각 값은 ,(콤마)로 구분해줍니다.
# 리스트 = [값, 값, 값]
a = [38, 21, 53, 62, 19]
# a
# [38, 21, 53, 62, 19]

#리스트에 여러 가지 자료형 저장하기
person = ['james', 17, 175.3, True]
# person
# ['james, 17, 175.3, True]

#빈 리스트 만들기
# 리스트=[]
# 리스트=list()
a = []
# a
# []
b = list()
# b
# []

#range를 사용하여 리스트 만들기
# range(횟수)
range(10)
range(0, 10)

# 리스트 = list(range(횟수))
a = list(range(10))
# a
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
#주의 
#끝나는 숫자는 생성되는 숫자에 포함되지 않습니다.
#즉, list에 range(5,12)를 넣으면 5부터 11까지 들어있는 리스트가 생성됩니다.

# 리스트 = list(range(시작, 끝))
b = list(range(5, 12))
# b 
#[5, 6, 7, 8, 8, 10, 11]

# 리스트 = list(range(시작, 끝, 증가폭))
c = list(range(-4, 10, 2))
# c
# [-4, -2, 0, 2, 4, 6, 8]

d = list(range(10, 0, -1))
# d
# [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

#튜플 사용하기
# 튜플은 리스트처럼 요소를 일렬로 저장하지만, 안에 저장된 요소를 변경, 추가, 삭제를 할 수 없다
# 간단하게 읽기 전용 리스트라고 함
# 변수에 값을 저장할 때 ()로 묶어주면 튜플이 되며 각 값은 ,로 구분 또는, 괄호로 묶지 않고 값만 콤마로 구분해도 튜플임
# 튜플 = (값, 값, 값)
# 튜플 = 값, 값, 값
a = (38, 21, 53, 62, 19)
a = 38, 21, 53, 62, 19
# a
# (38, 21, 53, 62, 19)

person = ('james', 17, 175.3, True)
# person
# ('james', 17, 175.3, True)

#요소가 한 개 들어있는 튜플 만들기
# ()안에 값 한 개를 넣고 ,를 붙임 또는 괄호로 묶지 않아도 됨
# 튜플 = (값,)
# 튜플 = 값,
(38, )
# (38,)
38,
# 38,
# 한 개짜리 튜플이 필요한 이유 : 함수를 사용하다 보면 값이 아닌 튜플을 넣어야 할 경우가 생겨서

#range를 사용하여 튜플 만들기
# 튜플 안에 range를 넣으면 됨
# 튜플 = tuple(range(횟수))
a = tuple(range(10))
# a
# (0,1,2,3,4,5,6,7,8,9)

# 튜플 = tuple(range(시작, 끝))
b = tuple(range(5, 12))
# b
# (5, 6, 7, 8, 9, 10, 11)

# 튜플 = tuple(range(시작, 끝, 증가폭))
c = tuple(range(-4, 10, 2))
# c
# (-4, -2, 0, 2, 4, 6, 8)

# 튜플을 리스트로 만들고 리스트를 튜플로 만들기
a = [1, 2, 3]
# tuple(a)
# (1, 2, 3)

b = (4, 5, 6)
# list(b)
# [4, 5, 6]


## list와 tuple 안에 문자열을 넣으면?
## 문자 리스트, 문자 튜플이 생성됨
# list('Hello')
# ['H, 'e', 'l', 'l', 'o']
# tuple('Hello')
# ('H, 'e', 'l', 'l', 'o')